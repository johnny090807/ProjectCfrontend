{"version":3,"sources":["./src/app/user-info/user-info.component.ts","./src/app/register/register.component.ts","./src/app/footer/footer.component.ts.FooterComponent.html","./src/app/res-details/res-details.component.ts","./src/app/admin-users/admin-users.service.ts","./src/app/about/about.component.ts","./src/app/register/register.component.html","./src/app/home/home.component.ts","./src/app/register-car/register-car.component.ts","./src/app/Pipes/unique.pipe.ts","./src/app/login/user.model.ts","./src/environments/environment.ts","./src/app/res-details/res-details.component.html","./src/app/admin/admin.component.html","./src/app/register-car/carClass.model.ts","./src/app/home/home.component.ts.HomeComponent.html","./src/app/register-car/register-car.component.html","./src/app/rent/rent.component.ts","./src/app/user-info/user-info.component.html","./src/app/admin-users/admin-users.component.ts","./src/app/app.component.ts","./src/app/admin/admin.component.ts","./src/app/admin-cars/admin-cars.component.html","./src/app/login/login.component.html","./src/app/app.module.ts","./src/app/header/header.component.html","./src/app/contact/contact.component.ts","./src/app/contact/contact.component.ts.ContactComponent.html","./src/app/header/header.component.ts","./src/app/footer/footer.component.ts","./src/app/rent/rent.component.html","./src/app/admin-users/admin-users.component.html","./src/app/rent/car.service.ts","./src/app/car-reservation/car-reservation.component.ts","./src/app/about/about.component.html","./src/app/car-reservation/car-reservation.component.html","./src/app/admin-cars/admin-cars.component.ts","./src/app/login/login-service.service.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/app.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-user-info',\n  templateUrl: './user-info.component.html',\n  styleUrls: ['./user-info.component.scss']\n})\nexport class UserInfoComponent implements OnInit {\n  public reservations = [];\n  constructor(private http: HttpClient,\n              private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.getReservationsByUserId()\n    setTimeout(() => {\n      console.log(this.reservations)\n    }, 250);\n  }\n\n  getReservationsByUserId(){\n    let IpLink = localStorage.getItem('serverIp');\n    let route = this.activatedRoute.snapshot.params['id']\n    this.http.get(IpLink + '/api/getReservationByUserId?id=' + route, {responseType: 'json'})\n    .subscribe((response: Array<any>) => {\n      this.reservations = response;\n    })\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { LoginService } from '../login/login-service.service';\r\nimport { User } from '../login/user.model';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  public registerForm: FormGroup;\r\n  constructor(private formBuilder: FormBuilder,\r\n              private loginService: LoginService) { }\r\n              \r\n  ngOnInit(): void {\r\n    this.registerForm =this.formBuilder.group({\r\n      firstName: new FormControl('', [Validators.required]),\r\n      lastName: new FormControl('', [Validators.required]),\r\n      userName: new FormControl('', [Validators.required]),\r\n      password: new FormControl('', [Validators.required]),\r\n      Address: new FormControl('', [Validators.required]),\r\n      Age: new FormControl('', [Validators.required]),\r\n      PhoneNumber: new FormControl('', [Validators.required]),\r\n      EmailAddress: new FormControl('', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")]),\r\n    });\r\n  }\r\n\r\n  onSubmit(values){\r\n    const userToBeAdded = new User(values.firstName, values.lastName,values.userName, values.password, values.Address, values.EmailAddress, values.Age, values.PhoneNumber);\r\n    this.loginService.addUser(userToBeAdded)\r\n    .subscribe((response) => {\r\n      alert(response)\r\n    },\r\n    (error) => {\r\n      alert(error)\r\n    }) \r\n  }\r\n}\r\n","\n    <footer class=\"footer is-dark is-bold\">\n      <div class=\"content has-text-centered\">\n        <p>\n          Reynethan Leon\n        </p>\n      </div>\n    </footer>\n  ","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Component, OnChanges, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { LoginService } from '../login/login-service.service';\r\nimport { User } from '../login/user.model';\r\nimport { Car } from '../rent/car.model';\r\nimport { CarService } from '../rent/car.service';\r\nimport { RentComponent } from '../rent/rent.component';\r\n\r\n@Component({\r\n  selector: 'app-res-details',\r\n  templateUrl: './res-details.component.html',\r\n  styleUrls: ['./res-details.component.scss']\r\n})\r\nexport class ResDetailsComponent implements OnInit {\r\n  form: FormGroup;\r\n  car: Car;\r\n  loggedInUser: User;\r\n  price: number;\r\n  bestuurders: number;\r\n  datum: Date\r\n  public locations = [];\r\n\r\n  Reservations = [];\r\n  constructor(private carService: CarService,\r\n              private activatedRoute: ActivatedRoute,\r\n              private loginService: LoginService,\r\n              private fb: FormBuilder,\r\n              private http: HttpClient) {\r\n              }\r\n\r\n  ngOnInit(): void {\r\n    let route = this.activatedRoute.snapshot.params['id']\r\n    // this.car = this.carService.cars[route - 1];\r\n    this.carService.cars.forEach(car => {\r\n      if (car.id == route){\r\n        this.car = car\r\n      }\r\n    });\r\n    for (let car of this.carService.cars) {\r\n      this.locations.push(car.location);\r\n    }\r\n    this.loggedInUser == this.loginService.loggedInUser;\r\n    this.price = this.car.price;\r\n    this.form = this.fb.group({\r\n      Bestuurders: [new FormControl(), Validators.required],\r\n      Kinderstoel: new FormControl(),\r\n      Volgetankt: new FormControl(),\r\n      Navigatie: new FormControl(),\r\n      Location: new FormControl(),\r\n      dateRange : new FormGroup({\r\n        startDate: new FormControl(),\r\n        endDate: new FormControl()\r\n      }),\r\n    });\r\n    this.getAllReservedDates()\r\n  }\r\n  LoggedIn(){\r\n    this.loggedInUser = this.loginService.loggedInUser;\r\n    return this.loggedInUser\r\n  }\r\n  onSubmit(){\r\n    this.loggedInUser = this.loginService.loggedInUser;\r\n    let Bestuurders = this.form.value.Bestuurders\r\n    if(Bestuurders == null){\r\n      Bestuurders = 1\r\n    }else{\r\n      Bestuurders += 1\r\n    }\r\n    let Kinderstoel = this.form.value.Kinderstoel\r\n    let Location = this.form.value.Location\r\n    let Volgetankt = this.form.value.Volgetankt\r\n    let Navigatie = this.form.value.Navigatie\r\n    let startDate = this.form.value['dateRange']['startDate'];\r\n    let endDate = this.form.value['dateRange']['endDate'];\r\n    let reservationArray = {\r\n      \"userId\": this.loggedInUser.id,\r\n      \"carId\": this.car.id,\r\n      \"bestuurders\": Bestuurders,\r\n      \"price\": this.price,\r\n      \"kinderstoel\": Kinderstoel,\r\n      \"navigatie\": Navigatie,\r\n      \"volgetankt\": Volgetankt,\r\n      \"startDate\": startDate,\r\n      \"endDate\": endDate,\r\n      \"Location\": Location,\r\n    }\r\n    let checkDate: Date[] = this.getDaysArray(startDate,endDate)\r\n    for(let date in checkDate){\r\n      for(let date2 in this.ReservationDates){\r\n        if(checkDate[date].getDate() == this.ReservationDates[date2].getDate()){\r\n          alert(\"This date is already taken. Click the reserved dates to see the reserved dates\")\r\n          return\r\n        }\r\n      }\r\n    }\r\n    if(endDate == null){\r\n      alert(\"You need to fill in a date.\")\r\n    }else{\r\n      let IpLink = localStorage.getItem('serverIp');\r\n      let body = JSON.stringify(reservationArray);\r\n      let headers = new HttpHeaders({'Content-Type': 'application/json'});\r\n      this.http.post(IpLink + '/api/addReservation/', body, {headers, responseType: 'text'})\r\n      .subscribe(res => alert(\"Thank you for the reservation!\"),\r\n      error => console.error(error))\r\n    }\r\n  }\r\n\r\n  //Get all days from begin to end date\r\n  getDaysArray = function(startDate, endDate) {​​\r\n    for(var arr=[],dt=new Date(startDate); dt<=endDate; dt.setDate(dt.getDate()+1)){​​\r\n        arr.push(new Date(dt));\r\n    }​​\r\n    return arr;\r\n  }​​;\r\n\r\n  //Get start date till end date calculation\r\n  getDaysNumber = function(startDate, endDate) {​​\r\n    for(var arr=0,dt=new Date(startDate); dt<=endDate; dt.setDate(dt.getDate()+1)){​​\r\n        arr++;\r\n    }​​\r\n    return arr;\r\n  }​​;\r\n  getAllReservedDates(){\r\n    let IpLink = localStorage.getItem('serverIp');\r\n    let headers = new HttpHeaders({'Content-Type': 'application/json'});\r\n    this.http.get(IpLink + '/api/getReservationByCarId?id=' + this.car.id, {headers, responseType: 'json'})\r\n    .subscribe((res: Array<Object>) => {\r\n      this.Reservations = res;\r\n      \r\n      this.makeAllReservedDates()\r\n    },\r\n    error => console.log(error))\r\n  };\r\n\r\n  makeAllReservedDates(){\r\n    let arr = this.Reservations;\r\n    let newArr = []\r\n    for(let date in arr){\r\n      let allDates = this.getDaysArray(arr[date]['startDate'], arr[date]['endDate'])\r\n      for(let date in allDates){\r\n        newArr.push(allDates[date])\r\n      }\r\n    }\r\n    this.ReservationDates = newArr\r\n  }\r\n  ReservationDates : Date[] = [];\r\n  unavailableDays(calenderDate: Date): boolean{\r\n    let FalseStatement = this.ReservationDates.findIndex(testDate => calenderDate.toDateString() == testDate.toDateString()) >= 0;\r\n    return !FalseStatement && calenderDate > new Date();\r\n    // return calenderDate > new Date() && calenderDate.toDateString() != new Date('2021-01-09T00:00:00').toDateString();\r\n    // return calenderDate > new Date();\r\n  }\r\n  unavailableDaysBeforeOwnDate(calenderDate: Date): boolean{\r\n    return calenderDate > new Date();\r\n  }\r\n\r\n  onChange(): void{\r\n    \r\n    this.price = this.car.price * this.getDaysNumber(this.form.value.dateRange.startDate, this.form.value.dateRange.endDate)\r\n    this.datum = null\r\n    if(this.form.value.Bestuurders != null){\r\n      this.price += this.form.value.Bestuurders * 20\r\n    }\r\n    if(this.form.value.Kinderstoel){\r\n      this.price += 20\r\n   }\r\n    if(this.form.value.Navigatie){\r\n      this.price += 12.50\r\n    }\r\n    if(this.form.value.Volgetankt){\r\n      this.price += 90\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../login/user.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminUsersService {\r\n  public Users: Array<User> = [];\r\n\r\n  constructor() { }\r\n\r\n  public returnUsers() {\r\n    return this.Users;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.scss']\r\n})\r\nexport class AboutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bulma@0.9.1/css/bulma.min.css\">\r\n  <title>Login</title>\r\n</head>\r\n<body>\r\n<section class=\"hero is-small is-dark is-bold has-text-centered\">\r\n  <div class=\"hero-body\">\r\n    <div class=\"container\">\r\n      <h1 class=\"title\">Register</h1>\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n<section class=\"section\">\r\n<div class=\"container\">\r\n  <div class=\"field\">\r\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit(registerForm.value)\">\r\n      <div class=\"field mx-6 px-6\">\r\n        <label class=\"label\" style=\"color: white;\">Name</label>\r\n        <div class=\"control\">\r\n          <input [ngClass]=\"{'is-danger': registerForm.controls.firstName.invalid && (registerForm.controls.firstName.dirty || registerForm.controls.firstName.touched)}\"class=\"input\" type=\"text\" formControlName=\"firstName\" placeholder=\"e.g Alex\" required>\r\n        </div>\r\n        <p *ngIf=\"registerForm.controls.firstName.invalid && (registerForm.controls.firstName.dirty || registerForm.controls.firstName.touched && registerForm.controls.firstName.errors.required)\" class=\"help is-danger\">Please fill in a correct name</p>\r\n      </div>\r\n\r\n      <div class=\"field mx-6 px-6\">\r\n        <label class=\"label\" style=\"color: white;\">Surname</label>\r\n        <div class=\"control\">\r\n          <input [ngClass]=\"{'is-danger': registerForm.controls.lastName.invalid && (registerForm.controls.lastName.dirty || registerForm.controls.lastName.touched)}\"class=\"input\" type=\"text\" formControlName=\"lastName\" placeholder=\"e.g Smith\" required>\r\n        </div>\r\n        <p *ngIf=\"registerForm.controls.lastName.invalid && (registerForm.controls.lastName.dirty || registerForm.controls.lastName.touched && registerForm.controls.lastName.errors.required)\" class=\"help is-danger\">Please fill in a correct surname</p>\r\n      </div>\r\n\r\n      <div class=\"field mx-6 px-6\">\r\n        <label class=\"label\" style=\"color: white;\">Username</label>\r\n        <div class=\"control\">\r\n          <input [ngClass]=\"{'is-danger': registerForm.controls.userName.invalid && (registerForm.controls.userName.dirty || registerForm.controls.userName.touched && registerForm.controls.userName.errors.required)}\"class=\"input\" type=\"text\" formControlName=\"userName\" placeholder=\"e.g AlexSmith\" required>\r\n        </div>\r\n        <p *ngIf=\"registerForm.controls.userName.invalid && (registerForm.controls.userName.dirty || registerForm.controls.userName.touched && registerForm.controls.userName.errors.required)\" class=\"help is-danger\">Please fill in a correct username</p>\r\n      </div>\r\n\r\n      <div class=\"field mx-6 px-6\">\r\n        <label class=\"label\" style=\"color: white;\">Password</label>\r\n        <div class=\"control\">\r\n          <input [ngClass]=\"{'is-danger': registerForm.controls.password.invalid && (registerForm.controls.password.dirty || registerForm.controls.password.touched && registerForm.controls.password.errors.required)}\"class=\"input\" type=\"password\" formControlName=\"password\" placeholder=\"personal preference\" required>\r\n        </div>\r\n        <p *ngIf=\"registerForm.controls.password.invalid && (registerForm.controls.password.dirty || registerForm.controls.password.touched && registerForm.controls.password.errors.required)\" class=\"help is-danger\">Please fill in a correct password</p>\r\n      </div>\r\n\r\n      <div class=\"field mx-6 px-6\">\r\n        <label class=\"label\" style=\"color: white;\">Address</label>\r\n        <div class=\"control\">\r\n          <input [ngClass]=\"{'is-danger': registerForm.controls.Address.invalid && (registerForm.controls.Address.dirty || registerForm.controls.Address.touched && registerForm.controls.Address.errors.required)}\"class=\"input\" type=\"text\" formControlName=\"Address\" placeholder=\"e.g Somestreet 123\" required>\r\n        </div>\r\n        <p *ngIf=\"registerForm.controls.Address.invalid && (registerForm.controls.Address.dirty || registerForm.controls.Address.touched && registerForm.controls.Address.errors.required)\" class=\"help is-danger\">Please fill in a correct Address</p>\r\n      </div>\r\n\r\n      <div class=\"field mx-6 px-6\">\r\n        <label class=\"label\" style=\"color: white;\">Email address</label>\r\n        <div class=\"control\">\r\n          <input [ngClass]=\"{'is-danger': registerForm.controls.EmailAddress.invalid && (registerForm.controls.EmailAddress.dirty || registerForm.controls.EmailAddress.touched && registerForm.controls.EmailAddress.errors.required)}\"class=\"input\" type=\"text\" formControlName=\"EmailAddress\" placeholder=\"e.g alexsmith78@gmail.com\" required>\r\n        </div>\r\n        <p *ngIf=\"registerForm.controls.EmailAddress.invalid && (registerForm.controls.EmailAddress.dirty || registerForm.controls.EmailAddress.touched && registerForm.controls.EmailAddress.errors.required)\" class=\"help is-danger\">This is not a correct email address</p>\r\n      </div>\r\n      <br>\r\n      <div class=\"buttons has-addons is-centered\">\r\n        <br>\r\n        <button class=\"button is-white is-outlined\" type=\"submit\" [disabled]=\"!this.registerForm.valid\" value=\"Register\">Register</button>\r\n      </div>\r\n      <div class=\"has-text-centered has-text-white\">\r\n        <br> <p>If you already have an account click <a routerLink=\"/Login\">here</a> to log in</p>\r\n      </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</section>\r\n</body>\r\n</html>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  template: `\r\n    <section class=\"hero is-dark is-fullheight\">\r\n      <div class=\"hero-body\">\r\n        <div class=\"container\">\r\n          <h1 class=\"title\">\r\n            Car rental service X\r\n          </h1>\r\n          <h2 class=\"subtitle\">\r\n          The best way to rent a car\r\n          </h2>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  `,\r\n  styles: [`\r\n    .hero {\r\n      background-image: url('/assets/img/pexels-jan-karan-4777372.jpg') !important;\r\n      background-size: cover;\r\n      background-position: center center;\r\n    }\r\n\r\n  `]\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { CarClass } from './carClass.model';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport { LoginService } from '../login/login-service.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register-car',\r\n  templateUrl: './register-car.component.html',\r\n  styleUrls: ['./register-car.component.scss']\r\n})\r\nexport class RegisterCarComponent implements OnInit {\r\n  public CarRegisterForm: FormGroup;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    private http: HttpClient,\r\n    private LoginService: LoginService,\r\n    private router: Router) {\r\n    // if (this.LoginService.loggedInUser == null)\r\n    // {\r\n    //   alert('You need to be logged in to view this page.')\r\n    //   this.router.navigate(['/Login']);\r\n    // }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.CarRegisterForm = this.formBuilder.group({\r\n      brand: ['', Validators.required],\r\n      model: ['', Validators.required],\r\n      location: ['', Validators.required],\r\n      carAge: ['', Validators.required],\r\n      mileage: ['', Validators.required],\r\n      doors: [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")],\r\n    });\r\n  }\r\n\r\n  onSubmit(values) {\r\n    const pic = new FormData();\r\n    pic.append(\"MyFile\", this.selectedFile, this.selectedFile.name);\r\n    let headers = new HttpHeaders({ 'Content-Type': 'multipart/form-data' });\r\n    const IpLink = localStorage.getItem('serverIp');\r\n    // console.log(this.CarRegisterForm)\r\n    this.http.post(IpLink + '/api/addImage', pic, {responseType: 'text'})\r\n    .subscribe(res => {\r\n      console.log(res);\r\n      headers = new HttpHeaders({'Content-Type': 'application/json'});\r\n      const carToBeAdded = new CarClass(values.brand,values.model, values.location,values.carAge, values.mileage, values.doors, res);\r\n      let body = JSON.stringify(carToBeAdded);\r\n      this.http.post(IpLink + '/api/addCar', body, {headers, responseType: 'text'})\r\n      .subscribe(message => {\r\n        alert(message) \r\n        window.location.reload();\r\n      },\r\n      error => alert(error.message))\r\n    }), error => alert(error.message)\r\n\r\n  }\r\n\r\n  // selectedFile = null;\r\n  // onFileSelected(event){\r\n  //   this.selectedFile = <File>event.target.files[0];\r\n  // }\r\n\r\n  // onUpload(){\r\n  //   const fd = new FormData;\r\n  //   fd.append('image', this.selectedFile, this.selectedFile.name);\r\n  //   //change the url to a location where we wanna store the images\r\n  //   this.http.post('http://localhost:8080/api/addCar', fd, {\r\n  //     reportProgress: true,\r\n  //     observe: 'events'\r\n  //   })\r\n  //     .subscribe(event=>{\r\n  //       console.log(event);\r\n  //     });\r\n  // }\r\n  // url;\r\n  // msg = \"\";\r\n  // onFileUpload(event){\r\n  //   if(!event.target.files[0] || event.target.files[0].length == 0) {\r\n  //     this.msg = 'You must select an image';\r\n  //     return;\r\n  //   }\r\n\r\n  //   var mimeType = event.target.files[0].type;\r\n\r\n  //   if (mimeType.match(/image\\/*/) == null) {\r\n  //     this.msg = \"Only images are supported\";\r\n  //     return;\r\n  //   }\r\n\r\n  //   const imageToUpload = event.target.files[0];\r\n\r\n  // }\r\n  selectedFile;\r\n  imagePreview;\r\n  onFileUpload(event) {\r\n    this.selectedFile = event.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      this.imagePreview = reader.result;\r\n    };\r\n    reader.readAsDataURL(this.selectedFile);\r\n  }\r\n    // OnUploadFile() {\r\n    // //Upload file here send a binary data\r\n    //   this.http.post('api/file-upload', this.selectedFile)\r\n    //   .subscribe(message => alert(message),\r\n    //   error => alert(error.message));\r\n    // }\r\n\r\n}\r\n  // OnUploadFile() {\r\n  // //Upload file here send a binary data\r\n  //   this.http.post('api/file-upload', this.selectedFile)\r\n  //   .subscribe(message => alert(message),\r\n  //   error => alert(error.message));\r\n  // }\r\n\r\n\r\n    // url;\r\n    // msg = \"\";\r\n\r\n    // selectFile(event) {\r\n    //   let imageToUpload = null;\r\n\r\n    //   if(!event.target.files[0] || event.target.files[0].length == 0) {\r\n    //     this.msg = 'You must select an image';\r\n    //     return;\r\n    //   }\r\n\r\n    //   var mimeType = event.target.files[0].type;\r\n\r\n    //   if (mimeType.match(/image\\/*/) == null) {\r\n    //     this.msg = \"Only images are supported\";\r\n    //     return;\r\n    //   }\r\n\r\n      // var reader = new FileReader();\r\n      // reader.readAsDataURL(event.target.files[0]);\r\n\r\n      // reader.onload = (_event) => {\r\n      //   this.msg = \"\";\r\n      //   this.url = reader.result;\r\n\r\n    //   }\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\r\nimport { Car } from '../rent/car.model';\r\n\r\n@Pipe({\r\n  name: 'unique',\r\n  pure: false\r\n})\r\nexport class UniquePipe implements PipeTransform {\r\n\r\n  transform(value: any, args?: any): any {\r\n    let uniqueArray = value.filter(function (el, index, array) { \r\n      return array.indexOf (el) == index;\r\n    });\r\n    return uniqueArray;\r\n\r\n  }\r\n\r\n}\r\n","export class User {\r\n  constructor(\r\n    public firstName: string,\r\n    public lastName: string,\r\n    public userName: string,\r\n    public password: string,\r\n    public address: string,\r\n    public email: string,\r\n    public Age?: Date,\r\n    public PhoneNumber?: string,\r\n    public id?: number\r\n  ) { }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bulma@0.9.1/css/bulma.min.css\">\r\n  <title>Login</title>\r\n</head>\r\n<body>\r\n<div class=\"container\">\r\n    <div class=\"left\">\r\n        <input matInput\r\n        style=\"display: none\"\r\n        [matDatepicker]=\"picker\"\r\n        [matDatepickerFilter]=\"unavailableDays.bind(this)\"\r\n        >\r\n        Click here to see reserved days\r\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n        <mat-datepicker #picker [opened]=\"true\"></mat-datepicker>\r\n    </div>\r\n    <div class=\"middle\">\r\n        <form [formGroup]=\"form\">\r\n            <input type=\"number\" class=\"input\" placeholder=\"Extra bestuurders - €20 per extra bestuurder\" formControlName=\"Bestuurders\" [ngModel]=\"bestuurders\" (ngModelChange)=\"this.onChange()\">\r\n            <label class=\"input\">\r\n                <input type=\"checkbox\" value=\"20\" formControlName=\"Kinderstoel\" (change)=\"this.onChange()\">\r\n                Kinderstoeltje - €20 totaal\r\n            </label>\r\n            <label class=\"input\">\r\n                <input type=\"checkbox\" value=\"90\" formControlName=\"Volgetankt\" (change)=\"this.onChange()\">\r\n                Volgetankt ophalen! en bijna leeg terug zetten - €90 totaal\r\n            </label>\r\n            <label class=\"input\">\r\n                <input type=\"checkbox\" value=\"12.50\" formControlName=\"Navigatie\" (change)=\"this.onChange()\">\r\n                Navigatie systeem - €12,50 totaal\r\n            </label>\r\n            <label class=\"input\">\r\n                    <select formControlName=\"Location\">\r\n                      <option *ngFor=\"let location of locations | unique\" [ngValue]=\"location\">{{location}}</option>\r\n                    </select>\r\n            </label>\r\n           \r\n            <label for=\"DateRange\">\r\n                <h2>Choose your date:</h2>\r\n                <mat-date-range-input\r\n                [rangePicker]=\"RangePicker\"\r\n                [dateFilter]=\"unavailableDaysBeforeOwnDate\"\r\n                formGroupName=\"dateRange\">\r\n                <input matStartDate placeholder=\"Start date\" formControlName=\"startDate\">\r\n                <input matEndDate placeholder=\"End date\" formControlName=\"endDate\" [ngModel]=\"datum\" (ngModelChange)=\"this.onChange()\">\r\n                </mat-date-range-input>\r\n\r\n                <mat-datepicker-toggle matSuffix [for]=\"RangePicker\"></mat-datepicker-toggle>\r\n                <mat-date-range-picker\r\n                touchUi\r\n                #RangePicker\r\n                ></mat-date-range-picker>\r\n\r\n            </label>\r\n            <button (click)=\"onSubmit()\">Reserveer</button>\r\n        </form>\r\n    </div>\r\n    <div class=\"right\">\r\n        <h1>\r\n            €{{this.price}}\r\n        </h1>\r\n    </div>\r\n</div>\r\n</body>\r\n</html>\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>ADMIN PANEL</title>\r\n    <link rel=\"stylesheet\" href=\"admin.component.html\" />\r\n  </head>\r\n  <body>\r\n    <div class=\"grid\">\r\n      <div class=\"gridItem\" onclick=\"location.href='temp.html'\">\r\n        <h1>Server Status*</h1>\r\n      </div>\r\n        <a class=\"gridItem\" routerLink=\"/AdminUsers\"><h1>Accounts</h1> </a>\r\n        <a class=\"gridItem\" routerLink=\"/AdminCars\"><h1>Cars</h1> </a>\r\n      <div class=\"gridItem\" onclick=\"location.href='temp.html'\">\r\n        <h1>Locations*</h1>\r\n      </div>\r\n      <div class=\"gridItem\" onclick=\"location.href='temp.html'\">\r\n        <h1>Extra's*</h1>\r\n      </div>\r\n      <div class=\"gridItem\" onclick=\"location.href=':D.html'\">\r\n        <h1>:D</h1>\r\n      </div>\r\n    </div>\r\n  </body>\r\n</html>\r\n","export class CarClass {\r\n    constructor(\r\n        public brand: string,\r\n        public model: string,\r\n        public location: string,\r\n        public carAge: number,\r\n        public mileage: number,\r\n        public doors: number,\r\n        public imagePath?: string\r\n    ){}\r\n}","\n    <section class=\"hero is-dark is-fullheight\">\n      <div class=\"hero-body\">\n        <div class=\"container\">\n          <h1 class=\"title\">\n            Car rental service X\n          </h1>\n          <h2 class=\"subtitle\">\n          The best way to rent a car\n          </h2>\n        </div>\n      </div>\n    </section>\n  ","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bulma@0.9.1/css/bulma.min.css\">\r\n  <title>addCar</title>\r\n</head>\r\n<body>\r\n  <section class=\"hero is-small is-dark is-bold has-text-centered\">\r\n    <div class=\"hero-body\">\r\n      <div class=\"container\">\r\n        <h1 class=\"title\">Register a Car</h1>\r\n      </div>\r\n    </div>\r\n  </section>\r\n<section class=\"section has-text-white\">\r\n    <form [formGroup]=\"CarRegisterForm\" (ngSubmit)=\"onSubmit(CarRegisterForm.value)\">\r\n      <section class=\"container\">\r\n        <div class=\"field\">\r\n            <label for=\"brand\">Brand:</label><br>\r\n            <input class=\"input\" type=\"text\" formControlName=\"brand\" required>\r\n        </div>\r\n        <div class=\"field\">\r\n            <label for=\"model\">Model:</label><br>\r\n            <input class=\"input\" type=\"text\" formControlName=\"model\" required>\r\n        </div>\r\n        <div class=\"field\">\r\n            <label for=\"location\">Location:</label><br>\r\n            <input class=\"input\" type=\"text\" formControlName=\"location\" required>\r\n        </div>\r\n        <div class=\"field\">\r\n            <label for=\"carAge\">Car age:</label><br>\r\n            <input class=\"input\" type=\"number\" formControlName=\"carAge\" required>\r\n        </div>\r\n        <div class=\"field\">\r\n            <label for=\"mileage\">Mileage:</label><br>\r\n            <input class=\"input\" type=\"number\" formControlName=\"mileage\" required>\r\n        </div>\r\n        <div class=\"field\">\r\n            <label for=\"doors\">Doors:</label><br>\r\n            <input class=\"input\" type=\"number\" formControlName=\"doors\" required>\r\n        </div>\r\n        <div class=\"field\">\r\n          <br>\r\n          <label for=\"carPicture\">Upload a picture of the car:</label><br><br>\r\n          <input style=\"display: none\" type=\"file\" (change)=\"onFileUpload($event)\" #selectFile>\r\n          <button class=\"button is-white is-outlined mr-6\" (click)=\"selectFile.click()\">Select File</button>\r\n        </div>\r\n        <div *ngIf=\"imagePreview != null\" class=\"image-preview\" >\r\n            <img [src]=\"imagePreview\" >\r\n          </div>\r\n          <br>\r\n        <div class=\"buttons has-addons is-centered\">\r\n            <button class=\"button is-white is-outlined is-medium mr-6\" type=\"submit\">Add car!</button>\r\n        </div>\r\n        </section>\r\n    </form>\r\n</section>\r\n</body>\r\n</html>\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { promise } from 'protractor';\r\nimport { Car } from './car.model';\r\nimport { CarService } from './car.service';\r\n@Component({\r\n  selector: 'app-rent',\r\n  templateUrl: './rent.component.html',\r\n  styleUrls: ['./rent.component.scss']\r\n})\r\nexport class RentComponent implements OnInit {\r\n  public cars: Array<Car>;\r\n  public locations = [];\r\n  public checkedLocations = [];\r\n  public carsFilteredOnLocation = [];\r\n  public brands = [];\r\n  public checkedBrands = [];\r\n  public carsFilteredOnBrand = [];\r\n  public gearboxes = [];\r\n  public checkedGearboxes = [];\r\n  public carsFilteredOnGearbox = [];\r\n  public prices = [];\r\n  public carsFilteredOnPrice = [];\r\n  public oldCars = [];\r\n  public images = [];\r\n  constructor(private carService: CarService,\r\n              private sanitizer: DomSanitizer) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    Promise.resolve().then(_ => this.carService.getAllCars())\r\n    setTimeout(_ => {\r\n      this.cars = this.carService.returnCars();\r\n      this.carService.storeImages()\r\n      this.images = this.carService.images;\r\n      this.oldCars = this.cars;\r\n      this.carsFilteredOnLocation = this.cars;\r\n      this.carsFilteredOnBrand = this.cars;\r\n      this.carsFilteredOnGearbox = this.cars;\r\n      this.carsFilteredOnPrice = this.cars\r\n      for (let car of this.cars) {\r\n        this.locations.push(car.location);\r\n        this.brands.push(car.brand);\r\n        this.gearboxes.push(car.model);\r\n        this.prices.push(car.price);\r\n      }\r\n    }, 200)\r\n   \r\n  }\r\n  filterCars() {\r\n    this.cars = this.oldCars.filter(c => this.carsFilteredOnLocation.includes(c));\r\n    this.cars = this.cars.filter(c => this.carsFilteredOnBrand.includes(c));\r\n    this.cars = this.cars.filter(c => this.carsFilteredOnGearbox.includes(c));\r\n    this.cars = this.cars.filter(c => this.carsFilteredOnPrice.includes(c));\r\n  }\r\n  \r\n  sanitize( url ){\r\n    return this.sanitizer.bypassSecurityTrustUrl(url)\r\n  }\r\n  uncheckall() { //unUsed right now\r\n    this.cars = this.oldCars;\r\n  }\r\n\r\n  addCarsOnLocation() {\r\n    this.carsFilteredOnLocation = [];\r\n    for (let location of this.checkedLocations) {\r\n      for (let car of this.oldCars) {\r\n        if (location === car.location) {\r\n          this.carsFilteredOnLocation.push(car);\r\n        }\r\n      }\r\n    }\r\n    if (this.checkedLocations.length == 0) {\r\n      this.carsFilteredOnLocation = this.oldCars;\r\n    }\r\n    this.filterCars();\r\n\r\n  }\r\n\r\n  filterCarsOnLocation(checkedBox) {\r\n    let check = false;\r\n    let i = 0;\r\n    for (let location of this.checkedLocations) {\r\n      if (checkedBox === location) {\r\n        check = true;\r\n        this.checkedLocations.splice(i, 1);\r\n      }\r\n      i++;\r\n    }\r\n    if (check === false) {\r\n      this.checkedLocations.push(checkedBox);\r\n    }\r\n    this.addCarsOnLocation();\r\n  }\r\n\r\n  addCarsOnBrand() {\r\n    this.carsFilteredOnBrand = [];\r\n    for (let brand of this.checkedBrands) {\r\n      for (let car of this.oldCars) {\r\n        if (brand === car.brand) {\r\n          this.carsFilteredOnBrand.push(car);\r\n        }\r\n      }\r\n    }\r\n    if (this.checkedBrands.length == 0) {\r\n      this.carsFilteredOnBrand = this.oldCars;\r\n    }\r\n    this.filterCars();\r\n  }\r\n\r\n  filterCarsOnBrand(checkedBox) {\r\n    let check = false;\r\n    let i = 0;\r\n    for (let brand of this.checkedBrands) {\r\n      if (checkedBox === brand) {\r\n        check = true;\r\n        this.checkedBrands.splice(i, 1);\r\n      }\r\n      i++;\r\n    }\r\n    if (check === false) {\r\n      this.checkedBrands.push(checkedBox);\r\n    }\r\n    this.addCarsOnBrand();\r\n  }\r\n\r\n  addCarsOnGearbox() {\r\n    this.carsFilteredOnGearbox = [];\r\n    for (let gearbox of this.checkedGearboxes) {\r\n      for (let car of this.oldCars) {\r\n        if (gearbox === car.model) {\r\n          this.carsFilteredOnGearbox.push(car);\r\n        }\r\n      }\r\n    }\r\n    if (this.checkedGearboxes.length == 0) {\r\n      this.carsFilteredOnGearbox = this.oldCars;\r\n    }\r\n    this.filterCars();\r\n  }\r\n\r\n  filterCarsOnGearbox(checkedBox) {\r\n    let check = false;\r\n    let i = 0;\r\n    for (let gearbox of this.checkedGearboxes) {\r\n      if (checkedBox === gearbox) {\r\n        check = true;\r\n        this.checkedGearboxes.splice(i, 1);\r\n      }\r\n      i++;\r\n    }\r\n    if (check === false) {\r\n      this.checkedGearboxes.push(checkedBox);\r\n    }\r\n    this.addCarsOnGearbox();\r\n  }\r\n\r\n  addCarsOnPrice(min, max) {\r\n    this.carsFilteredOnPrice = [];\r\n    for (let car of this.oldCars) {\r\n      if (min <= car.price && max >= car.price) {\r\n        this.carsFilteredOnPrice.push(car);\r\n      }\r\n    }\r\n\r\n    if (!min && !max) {\r\n      this.carsFilteredOnPrice = this.oldCars;\r\n    }\r\n    this.filterCars();\r\n  }\r\n\r\n  filterCarsOnPrice() {\r\n    let min = document.querySelector<HTMLInputElement>(\"#minPrice\");\r\n    let max = document.querySelector<HTMLInputElement>(\"#maxPrice\");\r\n    this.addCarsOnPrice(min.value, max.value);\r\n  }\r\n\r\n  clearPrice() {\r\n    this.addCarsOnPrice(null, null);\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\n    <div class=\"section\">\n        <div class=\"tile is-anchestor\">\n            <div class=\"tile is-12 is-vertical is-parent\" >\n                <table class=\"table\">\n                    <thead>\n                        <tr>\n                            <th>Car name:</th>\n                            <th>Start Date:</th>\n                            <th>End Date:</th>\n                            <th>Kinderstoel:</th>\n                            <th>Bestuurders:</th>\n                            <th>Volgetankt:</th>\n                            <th>Navigatie:</th>\n                            <th>Afzet locatie:</th>\n                        </tr>\n                    </thead>\n                    <tbody  *ngFor=\"let reservation of reservations\">\n                        <tr>\n                            <th>{{reservation.carId}}</th>\n                            <th>{{reservation.startDate | date}}</th>\n                            <th>{{reservation.endDate | date}}</th>\n                            <th>{{reservation.kinderstoel}}</th>\n                            <th>{{reservation.bestuurders}}</th>\n                            <th>{{reservation.volgetankt}}</th>\n                            <th>{{reservation.navigatie}}</th>\n                            <th>{{reservation.dropoff}}</th>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { User } from '../login/user.model';\r\nimport { ignoreElements, catchError, retry } from 'rxjs/operators';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { AdminUsersService } from './admin-users.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-users',\r\n  templateUrl: './admin-users.component.html',\r\n  styleUrls: ['./admin-users.component.scss']\r\n})\r\n\r\nexport class AdminUsersComponent implements OnInit {\r\n  public users: Array<User>;\r\n  public user: User;\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private adminUsersService: AdminUsersService\r\n  ) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.users = this.adminUsersService.returnUsers();\r\n  }\r\n\r\n\r\n  getUsers() {\r\n    let IpLink = localStorage.getItem('serverIp');\r\n    this.http.get(IpLink + '/api/getUsers', { responseType: 'json' })\r\n      .subscribe((response) => {\r\n\r\n        for (let i = 0; i < Object.keys(response).length; i++) {\r\n          this.user = response[i];\r\n          this.users.push(this.user);\r\n        }\r\n\r\n      });\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport {DomSanitizer, SafeUrl} from '@angular/platform-browser';\r\nimport { LoginService } from './login/login-service.service';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { CarService } from './rent/car.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  form: FormGroup\r\n  image: SafeUrl;\r\n  constructor(private http: HttpClient,\r\n              private loginService: LoginService,\r\n              private sanitizer: DomSanitizer,\r\n              private carService: CarService){\r\n                localStorage.setItem('serverIp', 'http://51.144.75.83:8080/CrsX-1.0-SNAPSHOT')\r\n                this.getImage()\r\n                this.loginService.loggedIn()\r\n                this.carService.getAllCars()\r\n                // console.log(this.carService.cars)\r\n              }\r\n   getImage(){\r\n    let headers = new HttpHeaders({'Content-Type': 'image/png',\r\n                                  'Accept' : 'image/png'});\r\n    let IpLink = localStorage.getItem('serverIp');\r\n    this.http.get(IpLink + '/api/getImageByPath?path=car2.png', {headers, observe : 'response', responseType: 'text'})\r\n    .subscribe((response) => {\r\n      // console.log(response)\r\n      // console.log(response.headers.get('Content-Type'))\r\n      // this.sanitize(response)\r\n      // btoa(response)\r\n      // let objectURL = URL.createObjectURL(response);       \r\n      // this.image = this.sanitizer.bypassSecurityTrustUrl(objectURL);\r\n      // const reader = new FileReader();\r\n      // reader.onload = (e) => this.image = e.target.result;\r\n      // reader.readAsDataURL(new Blob([response]));\r\n      // reader.onload = (_event) => {\r\n      //   this.image = reader.result;\r\n      //  }\r\n      let objectURL = 'data:image/png;base64,' + response.body;\r\n      this.image = this.sanitizer.bypassSecurityTrustUrl(objectURL);\r\n    },\r\n    error => console.log(error))\r\n  }\r\n  // _arrayBufferToBase64( buffer ) {\r\n  //   var binary = '';\r\n  //   var bytes = new Uint8Array( buffer );\r\n  //   var len = bytes.byteLength;\r\n  //   for (var i = 0; i < len; i++) {\r\n  //      binary += String.fromCharCode( bytes[ i ] );\r\n  //   }\r\n  //   return window.btoa( binary );\r\n  // }\r\n  sanitize( url ){\r\n    return this.sanitizer.bypassSecurityTrustUrl(url)\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.scss']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <title>Document</title>\r\n</head>\r\n<body>\r\n  <h1><button (click)=\"getCars()\">GET CARS</button></h1>\r\n  <h1><button (click)=\"getCar(1)\">GET CAR</button></h1>\r\n\r\n  <div *ngFor=\"let car of this.cars\">\r\n    <div class=\"car\">\r\n      <h2>{{car.carAge}} {{car.brand}} {{car.model}}</h2>\r\n    </div>\r\n    <br>\r\n  </div>\r\n  <h1><button routerLink=\"../CarRegister\">ADD CAR</button></h1>\r\n  <!-- ../CarRegister.... waarom werkt dat zo??!?!?! XD -->\r\n\r\n</body>\r\n</html>\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bulma@0.9.1/css/bulma.min.css\">\r\n  <title>Login</title>\r\n</head>\r\n<body>\r\n<section class=\"hero is-small is-dark is-bold\">\r\n  <div class=\"hero-body\">\r\n  <div class=\"container\">\r\n\r\n    <h1 class=\"title has-text-centered\">Login</h1>\r\n  </div>\r\n  </div>\r\n</section>\r\n\r\n<section class=\"section\">\r\n<div class=\"loginFormContainer\">\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit(loginForm.value)\" action=\"*\" required>\r\n      <br><br>\r\n      <div class=\"field\">\r\n        <label class=\"label\" style=\"color: white;\">Username</label>\r\n            <input class=\"input\" [ngClass]=\"{'is-danger': loginForm.controls.username.invalid && (loginForm.controls.username.dirty || loginForm.controls.username.touched && loginForm.controls.username.errors.required)}\"  formControlName=\"username\" type=\"text\" placeholder=\"e.g AlexSmith\" required>\r\n            <p *ngIf=\"loginForm.controls.username.invalid && (loginForm.controls.username.dirty || loginForm.controls.username.touched && loginForm.controls.username.errors.required)\" class=\"help is-danger\">Please submit your username</p>\r\n      </div>\r\n      <br>\r\n      <div class=\"field\">\r\n        <label class=\"label\" style=\"color: white;\">Password</label>\r\n            <input class=\"input\" [ngClass]=\"{'is-danger': loginForm.controls.password.invalid && (loginForm.controls.password.dirty || loginForm.controls.password.touched && loginForm.controls.password.errors.required)}\" formControlName=\"password\" type=\"password\" placeholder=\"Don't forget!\" required>\r\n            <p *ngIf=\"loginForm.controls.password.invalid && (loginForm.controls.password.dirty || loginForm.controls.password.touched && loginForm.controls.password.errors.required)\" class=\"help is-danger\">Please submit your password</p>\r\n      </div>\r\n      <br>\r\n      <div class=\"field\">\r\n            <div class=\"buttons has-addons is-centered\">\r\n              <br>\r\n              <button class=\"button is-white is-outlined\" type=\"submit\" [disabled]=\"!this.loginForm.valid\" value=\"Login\">Log in</button>\r\n            </div>\r\n            <div class=\"has-text-centered has-text-white\">\r\n              <br> <p>If you don't have an account click <a routerLink=\"/Register\">here</a> to register</p>\r\n            </div>\r\n            <div class=\"errorLabel\">\r\n                <div class=\"errorMessage\">{{this.errorLabel}}</div>\r\n                <div class=\"validateMessage\">{{this.validateLabel}}</div>\r\n            </div>\r\n      </div>\r\n    </form>\r\n</div>\r\n</section>\r\n</body>\r\n</html>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { RentComponent } from './rent/rent.component';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { UniquePipe } from './Pipes/unique.pipe';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { ContactComponent } from './contact/contact.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { RegisterCarComponent } from './register-car/register-car.component';\r\nimport { CarReservationComponent } from './car-reservation/car-reservation.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { ResDetailsComponent } from './res-details/res-details.component';\r\nimport { AdminUsersComponent } from './admin-users/admin-users.component';\r\nimport { AdminCarsComponent } from './admin-cars/admin-cars.component';\nimport { UserInfoComponent } from './user-info/user-info.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    AboutComponent,\r\n    RentComponent,\r\n    UniquePipe,\r\n    AdminComponent,\r\n    ContactComponent,\r\n    FooterComponent,\r\n    RegisterCarComponent,\r\n    CarReservationComponent,\r\n    ResDetailsComponent,\r\n    AdminUsersComponent,\r\n    AdminCarsComponent,\r\n    UserInfoComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","<!-- <!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bulma@0.9.1/css/bulma.min.css\">\r\n  <title>Login</title>\r\n</head>\r\n<body> -->\r\n<!-- <nav class =\"navbar is-dark is-bold\">\r\n   Logo\r\n  <div class = \"navbar-brand is-capitalized\">\r\n   <a class = \"navbar-item has-text-weight-bold is-capitalized\">\r\n    CrsX\r\n   </a>\r\n   </div>\r\n\r\n       menu \r\n  <div class=\"navbar-menu\">\r\n  <div class=\"navbar-start\">\r\n    <a class=\"navbar-item\" routerLink=\"Home\">Home</a>\r\n    <a class=\"navbar-item\" routerLink=\"Contact\">Contact</a>\r\n    <a class=\"navbar-item\" routerLink=\"Rent\">Rent</a>\r\n    <a class=\"navbar-item\" routerLink=\"Admin\">Admin</a>\r\n  </div>\r\n  <div *ngIf=\"this.loggedIn() == null\" class=\"navbar-end\">\r\n    <a class=\"navbar-item\" routerLink=\"Login\">Login</a>\r\n    <a class=\"navbar-item\" routerLink=\"Register\">Register</a>\r\n  </div>\r\n  <div *ngIf=\"this.loggedIn() != null\" class=\"navbar-end\">\r\n  <a class=\"navbar-item\" routerLink=\"CarRegister\">Add car!</a>\r\n    <a class=\"navbar-item\" [routerLink]=\"['/User', this.loggedInUser.id]\">{{this.loggedInUser.firstName}} {{this.loggedInUser.lastName}}</a>\r\n    <a class=\"navbar-item\" (click)=\"this.Logout()\">Logout</a>\r\n  </div>\r\n  </div>\r\n</nav> -->\r\n<!-- </body>\r\n</html> -->\r\n<nav class=\"navbar is-dark\" role=\"navigation\" aria-label=\"main navigation\">\r\n  <div class=\"navbar-brand\">\r\n    <a class=\"navbar-item\" [routerLink]=\"['/Home']\" routerLinkActive=\"router-link-active\" >\r\n      CrsX\r\n    </a>\r\n<!-- \r\n    <a role=\"button\" class=\"navbar-burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\" (click)=\"changeExpanded()\">\r\n      <span aria-hidden=\"true\"></span>\r\n      <span aria-hidden=\"true\"></span>\r\n      <span aria-hidden=\"true\"></span>\r\n    </a> -->\r\n  </div>\r\n\r\n  <!-- <div id=\"navbarBasicExample\" *ngIf=\"this.expanded\" class=\"navbar-menu\"> -->\r\n    \r\n    <div class=\"navbar-start\">\r\n      <a class=\"navbar-item\" routerLink=\"Home\">Home</a>\r\n\r\n      <a class=\"navbar-item\" routerLink=\"Contact\">Contact</a>\r\n\r\n      <a class=\"navbar-item\" routerLink=\"Rent\">Rent</a>\r\n      <a class=\"navbar-item\" routerLink=\"Admin\">Admin</a>\r\n    </div>\r\n\r\n    <div class=\"navbar-end\">\r\n      <div class=\"navbar-item\">\r\n        <div class=\"buttons\">\r\n          <div *ngIf=\"this.loggedIn() == null\" class=\"navbar-end\">\r\n            <a class=\"button is-info\" routerLink=\"Login\">Login</a>\r\n            <a class=\"button is-light\" routerLink=\"Register\">Register</a>\r\n          </div>\r\n          <div *ngIf=\"this.loggedIn() != null\" class=\"navbar-end\">\r\n          <a class=\"button is-light\" routerLink=\"CarRegister\">Add car!</a>\r\n            <a class=\"button is-info\" [routerLink]=\"['/User', this.loggedInUser.id]\">{{this.loggedInUser.firstName}} {{this.loggedInUser.lastName}}</a>\r\n            <a class=\"button is-danger\" (click)=\"this.Logout()\">Logout</a>\r\n          </div>\r\n          <!-- <a class=\"button is-info\">\r\n            <strong>Sign up</strong>\r\n          </a>\r\n          <a class=\"button is-light\">\r\n            Log in\r\n          </a> -->\r\n        </div>\r\n      </div>\r\n    <!-- </div> -->\r\n  </div>\r\n</nav>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contact',\r\n  template: `\r\n    <section class=\"hero is-small is-dark is-bold\">\r\n    <div class=\"hero-body\">\r\n    <div class=\"container has-text-centered\">\r\n\r\n      <h1 class=\"title\">Contact Us</h1>\r\n\r\n    </div>\r\n    </div>\r\n    </section>\r\n\r\n    <section class=\"section has-background-dark\">\r\n    <div class=\"container has-background-dark\">\r\n\r\n      <!-- form goes here -->\r\n      <form (ngSubmit)=\"submitForm()\">\r\n\r\n        <!-- name -->\r\n        <div class=\"field\">\r\n          <input type=\"text\" name=\"name\" class=\"input\" placeholder=\"Your Name\" [(ngModel)]=\"name\">\r\n        </div>\r\n\r\n        <!-- email -->\r\n        <div class=\"field\">\r\n          <input type=\"email\" name=\"email\" class=\"input\" placeholder=\"Your Email\" [(ngModel)]=\"email\">\r\n        </div>\r\n\r\n        <!-- message -->\r\n        <div class=\"field\">\r\n          <textarea class=\"textarea\" name=\"message\" placeholder=\"How could we help you?\" [(ngModel)]=\"message\"></textarea>\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"button is-dark is-medium\">Submit</button>\r\n\r\n      </form>\r\n\r\n    </div>\r\n    </section>\r\n  `,\r\n  styles: []\r\n})\r\nexport class ContactComponent implements OnInit {\r\n  name: string;\r\n  email: string;\r\n  message: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  submitForm(){\r\n    const allInfo = `My name is ${this.name}. My email is ${this.email}. My message is ${this.message}`;\r\n    alert(allInfo);\r\n  }\r\n}\r\n","\n    <section class=\"hero is-small is-dark is-bold\">\n    <div class=\"hero-body\">\n    <div class=\"container has-text-centered\">\n\n      <h1 class=\"title\">Contact Us</h1>\n\n    </div>\n    </div>\n    </section>\n\n    <section class=\"section has-background-dark\">\n    <div class=\"container has-background-dark\">\n\n      <!-- form goes here -->\n      <form (ngSubmit)=\"submitForm()\">\n\n        <!-- name -->\n        <div class=\"field\">\n          <input type=\"text\" name=\"name\" class=\"input\" placeholder=\"Your Name\" [(ngModel)]=\"name\">\n        </div>\n\n        <!-- email -->\n        <div class=\"field\">\n          <input type=\"email\" name=\"email\" class=\"input\" placeholder=\"Your Email\" [(ngModel)]=\"email\">\n        </div>\n\n        <!-- message -->\n        <div class=\"field\">\n          <textarea class=\"textarea\" name=\"message\" placeholder=\"How could we help you?\" [(ngModel)]=\"message\"></textarea>\n        </div>\n\n        <button type=\"submit\" class=\"button is-dark is-medium\">Submit</button>\n\n      </form>\n\n    </div>\n    </section>\n  ","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from '../login/login-service.service';\r\nimport { User } from '../login/user.model';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: 'header.component.html',\r\n  styleUrls: ['header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  loggedInUser: User;\r\n  title = \"Crsx\";\r\n  expanded = false;\r\n  constructor(public loginService: LoginService,\r\n    private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    setTimeout(() => {\r\n      this.loggedInUser = this.loginService.loggedInUser\r\n    }, 500);\r\n  }\r\n  public changeExpanded(){\r\n    this.expanded = !this.expanded;\r\n  }\r\n  public loggedIn() {\r\n    this.loggedInUser = this.loginService.loggedInUser;\r\n    return this.loginService.loggedInUser;\r\n  }\r\n  public Logout() {\r\n    var res = confirm(\"Do you really want to logout?\");\r\n    if (res) {\r\n      this.loggedInUser = null;\r\n      this.loginService.loggedInUser = null;\r\n      localStorage.removeItem('userName')\r\n      localStorage.removeItem('password')\r\n    }\r\n  }\r\n\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  template: `\r\n    <footer class=\"footer is-dark is-bold\">\r\n      <div class=\"content has-text-centered\">\r\n        <p>\r\n          Reynethan Leon\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  `,\r\n  styles: [`\r\n    .footer {\r\n      background-color: #363636;\r\n      color: #ffffff;\r\n      padding: 1.5rem 1.5rem 1.5rem;\r\n}\r\n  `]\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bulma@0.9.1/css/bulma.min.css\">\r\n  <title>Login</title>\r\n</head>\r\n<body>\r\n<script>\r\n  const button = document.querySelector(\"button\")\r\n  const input = document.querySelector(\"#minPrice\")\r\n\r\n  button.addEventListener(\"click\", () => {\r\n    const { value } = input\r\n    console.log(value)\r\n  })\r\n</script>\r\n\r\n<div class=\"container\">\r\n  <h1 style=\"background-color: grey\">\r\n    Search your occasion! {{ oldCars.length }} cars available\r\n  </h1>\r\n  <div class=\"locationFilter\" style=\"grid-row-end: '{{ cars.length + 3 }}';\">\r\n    <div>\r\n      <h2 style=\"background-color: grey; margin-top: 0\">Locations:</h2>\r\n      <br />\r\n      <div *ngFor=\"let location of locations | unique\">\r\n        <input\r\n          (click)=\"filterCarsOnLocation(location)\"\r\n          type=\"checkbox\"\r\n          value=\"{{ location }}\"\r\n        />{{ location }}<br />\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"brandFilter\" style=\"grid-row-end: '{{ cars.length + 3 }}';\">\r\n    <div>\r\n      <h2 style=\"background-color: grey; margin-top: 0\">Brands:</h2>\r\n      <br />\r\n      <div *ngFor=\"let brand of brands | unique\">\r\n        <input\r\n          (click)=\"filterCarsOnBrand(brand)\"\r\n          type=\"checkbox\"\r\n          value=\"{{ brand }}\"\r\n        />{{ brand }}<br />\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"gearboxFilter\" style=\"grid-row-end: '{{ cars.length + 3 }}';\">\r\n    <div>\r\n      <h2 style=\"background-color: grey; margin-top: 0\">Model:</h2>\r\n      <br />\r\n      <div *ngFor=\"let gearbox of gearboxes | unique\">\r\n        <input\r\n          (click)=\"filterCarsOnGearbox(gearbox)\"\r\n          type=\"checkbox\"\r\n          value=\"{{ gearbox }}\"\r\n        />{{ gearbox }}<br />\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"priceFilter\" style=\"grid-row-end: '{{ cars.length + 3 }}';\">\r\n    <div>\r\n      <h2 style=\"background-color: grey; margin-top: 0\">Price Filter</h2>\r\n      <br />\r\n      <form>\r\n        <input type=\"text\" id=\"minPrice\" name=\"minPrice\">\r\n        <label for=\"minPrice\">From $</label>\r\n        <br><br>\r\n        <input type=\"text\" id=\"maxPrice\" name=\"maxPrice\">\r\n        <label for=\"maxPrice\">To $:</label>\r\n        <br><br>\r\n        <button (click)=\"filterCarsOnPrice()\">Search</button>\r\n        <button (click)=\"clearPrice()\">Clear</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n    <div class=\"occasionBar\" *ngFor=\"let car of cars; let i = index\">\r\n        <div class=\"occasion\">\r\n            <div class=\"top\">\r\n                <img class=\"occasionImg\" [src]=\"this.sanitize(this.car.imageUrl)\" alt=\"Car\">\r\n                <div>\r\n                    <h2 class=\"title\">{{car.brand}}</h2>\r\n                    <p>{{car.model}}</p>\r\n                </div>\r\n                <div>\r\n                    <h2>€{{car.price}}</h2>\r\n                </div>\r\n            </div>\r\n            <div class=\"bottom\">\r\n                <p class=\"straatnaam\">{{car.location}}</p>\r\n                <button [routerLink]=\"['/Rent', car.id]\">Bekijk nu</button>\r\n            </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</body>\r\n</html>\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <title>Document</title>\r\n</head>\r\n<body>\r\n  <h1><button (click)=\"getUsers()\">GET USERS</button></h1>\r\n\r\n  <div *ngFor=\"let user of this.users\">\r\n    <div class=\"user\">\r\n      <h2>{{user.firstName}} {{user.lastName}}</h2>\r\n    </div>\r\n    <br>\r\n  </div>\r\n\r\n</body>\r\n</html>\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { filter } from 'rxjs/operators';\r\nimport { Car } from './car.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CarService {\r\n  public cars:Array<Car>= []\r\n  public images = [];\r\n  // public cars:Array<Car>= [\r\n  //   {id: 1, brand: \"Manual\", model: \"BMW\", price: 30, location: \"Den Haag\", doors: 3,  imageUrl: \"../../assets/car2.png\", mileage: 102300, carAge: 2015},\r\n  //   {id: 2, brand: \"Automatic\", model: \"Dikke BMW\", price: 60, location: \"Voorburg\", doors: 3,  imageUrl: \"../../assets/car2.png\", mileage: 102300, carAge: 2015},\r\n  //   {id: 3, brand: \"Automatic\", model: \"Dikke BMW\", price: 50, location: \"Rotterdam\", doors: 3, imageUrl: \"../../assets/car2.png\", mileage: 102300, carAge: 2015},\r\n  //   {id: 4, brand: \"Automatic\", model: \"BMW\", price: 80, location: \"Hellevoetsluis\", doors: 3,  imageUrl: \"../../assets/car2.png\", mileage: 102300, carAge: 2015},\r\n  //   {id: 5, brand: \"Manual\", model: \"BMW\", price: 25, location: \"Utrecht\",  doors: 3, imageUrl: \"../../assets/car2.png\", mileage: 102300, carAge: 2015},\r\n  //   {id: 6, brand: \"Manual\", model: \"Dikke BMW\", price: 35, location: \"Rozenburg\", doors: 3, imageUrl: \"../../assets/car2.png\", mileage: 102300, carAge: 2015},\r\n  //   {id: 7, brand: \"Manual\", model: \"Dikke BMW\", price: 40, location: \"Wateringen\", doors: 3, imageUrl: \"../../assets/car2.png\", mileage: 102300, carAge: 2015},\r\n  //   {id: 8, brand: \"Automatic\", model: \"BMW\", price: 50, location: \"Voorburg\", doors: 3,  imageUrl: \"../../assets/car2.png\", mileage: 102300, carAge: 2015}\r\n  // ]\r\n  constructor(private http: HttpClient,\r\n              private sanitizer: DomSanitizer) {\r\n    this.getAllCars();\r\n    this.storeImages()\r\n   }\r\n\r\n  public returnCars(){\r\n    return this.cars;\r\n  }\r\n\r\n  async getAllCars(){\r\n    let IpLink = localStorage.getItem('serverIp');\r\n    let headers = new HttpHeaders({'Content-Type': 'application/json'});\r\n    this.http.get(IpLink + '/api/getCars', { headers, responseType: 'json' })\r\n      .subscribe((res: Array<Car>) => {\r\n        this.cars = res;\r\n      },\r\n        error => console.log(error))\r\n    // return returnthing\r\n  }\r\n  public storeImages(){\r\n    let headers = new HttpHeaders({'Content-Type': 'image/png',\r\n    'Accept' : 'image/png'});\r\n    let IpLink = localStorage.getItem('serverIp');\r\n    console.log()\r\n    this.cars.forEach(car => {\r\n      this.http.get(IpLink + '/api/getImageByPath?path='+car.imagePath+'', {headers, observe : 'response', responseType: 'text'})\r\n      .subscribe((response) => {\r\n      let objectURL = 'data:image/png;base64,' + response.body;\r\n      car.imageUrl = objectURL\r\n      },\r\n      error => console.log(error))\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { LoginService } from '../login/login-service.service';\r\nimport { User } from '../login/user.model';\r\nimport { Car } from '../rent/car.model';\r\nimport { CarService } from '../rent/car.service';\r\n\r\n@Component({\r\n  selector: 'app-car-reservation',\r\n  templateUrl: './car-reservation.component.html',\r\n  styleUrls: ['./car-reservation.component.scss']\r\n})\r\nexport class CarReservationComponent implements OnInit {\r\n  form: FormGroup\r\n  car: Car;\r\n  loggedInUser: User;\r\n  constructor(private carService: CarService,\r\n              private activatedRoute: ActivatedRoute,\r\n              private loginService: LoginService,\r\n              private fb: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    let route = this.activatedRoute.snapshot.params['id']\r\n    this.carService.cars.forEach(car => {\r\n      if (car.id == route){\r\n        this.car = car\r\n      }\r\n    });\r\n    // this.car = this.carService.cars['id'].find(route);\r\n    this.loggedInUser == this.loginService.loggedInUser;\r\n    this.form = this.fb.group({\r\n      dateRange : new FormGroup({\r\n        startDate: new FormControl(),\r\n        endDate: new FormControl()\r\n      }),\r\n    });\r\n  }\r\n  LoggedIn(){\r\n    this.loggedInUser = this.loginService.loggedInUser;\r\n    return this.loggedInUser\r\n  }\r\n}\r\n","Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusamus iure sapiente eaque enim vitae sed voluptatum dolore earum corrupti. Harum quod doloremque tempore fuga ducimus quasi mollitia dicta alias a.","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bulma@0.9.1/css/bulma.min.css\">\r\n  <title>Login</title>\r\n</head>\r\n<body>\r\n<div class=\"container\">\r\n    <div class=\"left\">\r\n\r\n    </div>\r\n    <div class=\"middle\">\r\n        <div class=\"carImage\">\r\n            <img src=\"{{this.car.imageUrl}}\" alt=\"\">\r\n        </div>\r\n        <div class=\"Information\">\r\n            <p>{{this.car.brand}}</p>\r\n            <p>{{this.car.model}}</p>\r\n        </div>\r\n        <div class=\"Price\">\r\n            <p>Vanaf: €{{this.car.price}} p/d</p>\r\n        </div>\r\n\r\n        <div class=\"confirmation-tab\">\r\n            <div>\r\n                <button [routerLink]=\"['/Res', this.car.id]\" *ngIf=\"this.LoggedIn() != null\">Reserveer</button>\r\n                <button [routerLink]=\"['/Login']\" *ngIf=\"this.LoggedIn() == null\">Login!</button>\r\n                <button routerLink=\"/Rent\">Cancel</button>\r\n            </div>\r\n        </div>\r\n        <div class=\"location-tab-left\">\r\n            <div>\r\n                <h1>Google location HERE!</h1>\r\n            </div>\r\n        </div>\r\n        <div class=\"location-tab-right\">\r\n            <div>\r\n                <h1>{{this.car.location}}</h1>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"right\">\r\n\r\n    </div>\r\n</div>\r\n</body>\r\n</html>\r\n\r\n<!-- <h1>{{this.car.name}}</h1>\r\n<h1>{{this.car.type}}</h1>\r\n<h1>{{this.car.price}}</h1>\r\n<h1>{{this.car.review}}</h1>\r\n<h1>{{this.car.adress}}</h1>\r\n<h1>{{this.car.imageUrl}}</h1> -->\r\n","import { Component, OnInit, Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { CarClass } from '../register-car/carClass.model';\r\nimport { CarService } from '../rent/car.service';\r\nimport { ignoreElements, catchError, retry } from 'rxjs/operators';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-admin-cars',\r\n  templateUrl: './admin-cars.component.html',\r\n  styleUrls: ['./admin-cars.component.scss']\r\n})\r\n\r\nexport class AdminCarsComponent implements OnInit {\r\n  public cars: Array<CarClass>;\r\n  public car: CarClass;\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private carService: CarService\r\n  ) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.cars = [];\r\n  }\r\n\r\n\r\n  getCars() {\r\n    let IpLink = localStorage.getItem('serverIp');\r\n    this.http.get(IpLink + '/api/getCars', { responseType: 'json' })\r\n      .subscribe((response) => {\r\n\r\n        for (let i = 0; i < Object.keys(response).length; i++) {\r\n          this.car = response[i];\r\n          this.cars.push(this.car);\r\n        }\r\n\r\n        console.log(this.cars);\r\n      });\r\n  }\r\n\r\n  getCar(id) {\r\n    let IpLink = localStorage.getItem('serverIp');\r\n    this.http.get(IpLink + '/api/getCarById?id=' + id, { responseType: 'json' })\r\n      .subscribe((response) => {\r\n        this.cars = [];\r\n        this.cars.push(response[0]);\r\n        console.log(this.cars);\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport {User} from './user.model';\r\nimport { ignoreElements, catchError, retry } from 'rxjs/operators';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LoginService {\r\n  public loggedInUser: User;\r\n  // Users : Array<User>= [\r\n  //   {id: 0, firstName: \"John\", lastName: \"Klees\", userName:\"admin\", password:\"geheim\", address: \"ergens DC.213\", email: \"Email@gmail.com\", admin:false},\r\n  //   {id: 1, firstName: \"Rey\", lastName: \"Leon\", userName:\"test\", password:\"test1\", address: \"ergens DC.213\", email: \"Email@gmail.com\", admin:false},\r\n  //   {id: 2, firstName: \"David\", lastName: \"Neres\", userName:\"test\", password:\"test2\", address: \"ergens DC.213\", email: \"Email@gmail.com\", admin:false},\r\n  // ]\r\n  constructor(private http: HttpClient,\r\n              private router: Router) { \r\n                \r\n              }\r\n  loggedIn(){\r\n    if(localStorage.getItem('userName') == null && localStorage.getItem('password') == null){\r\n      return;\r\n    }\r\n    let IpLink = localStorage.getItem('serverIp');\r\n    var user;\r\n    this.http.get(IpLink + '/api/checkLogin?userName=' + localStorage.getItem('userName') + '&password=' + localStorage.getItem('password'), {responseType: 'json'})\r\n    .subscribe((response) => {\r\n      user = new User(\r\n        response['firstName'],\r\n        response['lastName'],\r\n        response['userName'],\r\n        response['password'],\r\n        response['address'],\r\n        response['email'],\r\n        response['age'],\r\n        response['phonenumber'],\r\n        response['id']\r\n      );\r\n      this.loggedInUser = user;\r\n    })\r\n  }\r\n  checkLogin(username, password){\r\n    let IpLink = localStorage.getItem('serverIp');\r\n    var user;\r\n    this.http.get(IpLink + '/api/checkLogin?userName=' + username + '&password=' + password, {responseType: 'json'})\r\n    .subscribe((response) => {\r\n      user = new User(\r\n        response['firstName'],\r\n        response['lastName'],\r\n        response['userName'],\r\n        response['password'],\r\n        response['address'],\r\n        response['email'],\r\n        response['age'],\r\n        response['phonenumber'],\r\n        response['id']\r\n      );\r\n      if (user.firstName == null && user.lastName == null && user.address == null && user.email == null && user.username == null && user.password == null){\r\n        alert(\"This user is not known to us.\");\r\n      }else{\r\n        this.loggedInUser = user;\r\n        alert(\"You're logged in!\");\r\n        this.router.navigate(['/Home'])\r\n      }\r\n    }, error => alert(\"There was an error handling your response: \" + error.message))\r\n  }\r\n  addUser(User: User){\r\n    let IpLink = localStorage.getItem('serverIp');\r\n    let body = JSON.stringify(User);\r\n    let headers = new HttpHeaders({'Content-Type': 'application/json'});\r\n    return this.http.post(IpLink + '/api/addUser/', body, {headers, responseType: 'text'})\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { RentComponent } from './rent/rent.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { AdminCarsComponent } from './admin-cars/admin-cars.component';\r\nimport { AdminUsersComponent } from './admin-users/admin-users.component';\r\nimport { ContactComponent } from './contact/contact.component';\r\nimport { RegisterCarComponent } from './register-car/register-car.component';\r\nimport { CarReservationComponent } from './car-reservation/car-reservation.component';\r\nimport { ResDetailsComponent } from './res-details/res-details.component';\r\nimport { UserInfoComponent } from './user-info/user-info.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'Home', component: HomeComponent },\r\n  { path: 'Admin', component: AdminComponent },\r\n  { path: 'AdminCars', component: AdminCarsComponent },\r\n  { path: 'AdminUsers', component: AdminUsersComponent },\r\n  { path: 'Contact', component: ContactComponent },\r\n  { path: 'Register', component: RegisterComponent },\r\n  { path: 'Login', component: LoginComponent },\r\n  { path: 'About', component: AboutComponent },\r\n  { path: 'Rent', component: RentComponent },\r\n  { path: 'Rent/:id', component: CarReservationComponent },\r\n  { path: 'Res/:id', component: ResDetailsComponent },\r\n  { path: 'User/:id', component: UserInfoComponent },\r\n  { path: 'CarRegister', component: RegisterCarComponent },\r\n  { path: '**', component: HomeComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { CarService } from '../rent/car.service';\r\nimport { LoginService } from './login-service.service';\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  public loginForm: FormGroup;\r\n  errorLabel: string;\r\n  validateLabel: string;\r\n  constructor(private formBuilder: FormBuilder,\r\n              private loginService: LoginService,\r\n              private carService: CarService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n    });\r\n    // this.carService.getAllCars()\r\n    // .subscribe(res => console.log(res),\r\n    //           error => console.log(error))\r\n  }\r\n\r\n  onSubmit(values){\r\n    if (values.username != \"\" && values.password != \"\"){\r\n      this.loginService.checkLogin(values.username, values.password)\r\n      localStorage.setItem('userName', values.username);\r\n      localStorage.setItem('password', values.password);\r\n    }\r\n  }\r\n}\r\n","  <!-- <app-header></app-header>\r\n  <router-outlet></router-outlet>\r\n  <app-footer></app-footer> -->\r\n\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bulma@0.9.1/css/bulma.min.css\">\r\n  <title>Login</title>\r\n</head>\r\n<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n<app-footer></app-footer>\r\n</html>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}